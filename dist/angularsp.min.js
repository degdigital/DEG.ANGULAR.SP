var app=app||angular.module("angularSP",["ui.bootstrap"]);(function(ng,$){app.directive("contenteditable",function(){return{restrict:"A",require:"?ngModel",link:function(scope,element,attrs,ngModel){if(!ngModel){return}function read(){var html=element.html();if(html==="<br>"){ngModel.$setViewValue("")}else{ngModel.$setViewValue(html)}}ngModel.$render=function(){element.html(ngModel.$viewValue||"")};element.bind("blur keyup change",function(){scope.$apply(read)})}}});app.directive("ngspColumn",angularSpField);function angularSpField($compile){return{restrict:"A",require:"ngModel",scope:{ngspColumn:"=",ngModel:"="},link:link};function link(scope,element,attrs,ngModel){scope.ngspColumn={};scope.$watch("ngspColumn",function(){if(scope.ngspColumn.Title!==undefined&&scope.ngspColumn.InputType!==undefined){element.html("");element.append(generateTitleElement(scope.ngspColumn));element.append(generateInputElement(element,ngModel,scope))}})}function generateTitleElement(column){var titleElement=$("<label></label>");titleElement.text(column.Title);return titleElement}function generateInputElement(element,ngModel,scope){switch(scope.ngspColumn.InputType){case"text":return generateTextElement(ngModel,scope);break;case"textBox":return generateTextBoxElement(ngModel,scope);break;case"nicEdit":return generateNicEditElement(ngModel,scope);break;case"dropDown":return generateDropDownElement(ngModel,scope);break;case"checkbox":return generateCheckboxElement(ngModel,scope);break;case"dateTime":return generateDateTimeElement(ngModel,scope);break;case"peoplePicker":return generatePeoplePickerElement(element,ngModel,scope);break;default:console.log(scope.ngspColumn.InputType+" is currently unsupported as an input type.");break}}function generateTextElement(ngModel,scope){ngModel.$formatters.push(function(value){scope.InputValue=value});scope.textInputChanged=function(){ngModel.$setViewValue(scope.InputValue)};var inputElement=$("<input />");inputElement.attr("data-ng-model","InputValue");inputElement.attr("data-ng-change","textInputChanged()");if(scope.ngspColumn.Type==="text"){}else if(scope.ngspColumn.Type==="link"){}else if(scope.ngspColumn.Type==="number"){}else if(scope.ngspColumn.Type==="currency"){}else{console.log(scope.ngspColumn.Type+"is not supported as a column type for text input.");return}$compile(inputElement)(scope);return inputElement}function generateTextBoxElement(ngModel,scope){ngModel.$formatters.push(function(value){scope.InputValue=value});scope.textAreaChanged=function(){ngModel.$setViewValue(scope.InputValue)};var inputElement=$("<textarea></textarea>");inputElement.attr("data-ng-model","InputValue");inputElement.attr("data-ng-change","textAreaChanged()");if(scope.ngspColumn.Type==="multiText"){}else{console.log(scope.ngspColumn.Type+"is not supported as a column type for text box.");return}$compile(inputElement)(scope);return inputElement}function generateNicEditElement(ngModel,scope){ngModel.$formatters.push(function(value){scope.InputValue=value});var outerElement=$("<span></span>");var panelElement=$("<div></div>");outerElement.append(panelElement);var contentElement=$("<div></div>");contentElement.attr("contenteditable","true");contentElement.attr("data-ng-model","InputValue");outerElement.append(contentElement);var nicEditorConstrutorOption={iconsPath:"/AngularSP/lib/images/nicEditorIcons.gif"};var nicEditorInstance=new nicEditor(nicEditorConstrutorOption);nicEditorInstance.setPanel(panelElement[0]);nicEditorInstance.addInstance(contentElement[0]);if(scope.ngspColumn.Type==="multiText"){}else{console.log(scope.ngspColumn.Type+"is not supported as a column type for nicEdit.");return}$compile(outerElement)(scope);scope.$watch("InputValue",function(){ngModel.$setViewValue(scope.InputValue)});return outerElement}function generateDropDownElement(ngModel,scope){ngModel.$formatters.push(function(value){scope.InputValue=value});scope.dropDownChanged=function(){ngModel.$setViewValue(scope.InputValue)};var inputElement=$("<select></select>");inputElement.attr("data-ng-model","InputValue");inputElement.attr("data-ng-change","dropDownChanged()");if(scope.ngspColumn.Type==="choice"){inputElement.attr("data-ng-options","choice for choice in ngspColumn.Choices")}else if(scope.ngspColumn.Type==="lookup"){inputElement.attr("data-ng-options","lookupItem.id as lookupItem.label for lookupItem in ngspColumn.LookupItems")}else if(scope.ngspColumn.Type==="metadata"){inputElement.attr("data-ng-options","term.id as term.label for term in ngspColumn.Terms")}else{console.log(scope.ngspColumn.Type+"is not supported as a column type for dropdown menus.");return}$compile(inputElement)(scope);return inputElement}function generateCheckboxElement(ngModel,scope){ngModel.$formatters.push(function(value){scope.InputValue=value});scope.checkboxChanged=function(){ngModel.$setViewValue(scope.InputValue)};var outerElement=$("<span></span>");if(scope.ngspColumn.Type==="multiMetadata"||scope.ngspColumn.Type==="multiLookup"||scope.ngspColumn.Type==="multiChoice"){var repeatElement=$("<span></span>");var inputElement=$("<input />");inputElement.attr("data-ng-change","checkboxChanged()");var labelElement=$("<label></label>");inputElement.attr("type","checkbox");if(scope.ngspColumn.Type==="multiMetadata"){repeatElement.attr("data-ng-repeat","term in ngspColumn.Terms");inputElement.attr("data-ng-model","InputValue[term.id]");labelElement.text("{{term.label}}")}else if(scope.ngspColumn.Type==="multiLookup"){repeatElement.attr("data-ng-repeat","lookupItem in ngspColumn.LookupItems");inputElement.attr("data-ng-model","InputValue[lookupItem.id]");labelElement.text("{{lookupItem.label}}")}else if(scope.ngspColumn.Type==="multiChoice"){repeatElement.attr("data-ng-repeat","choice in ngspColumn.Choices");inputElement.attr("data-ng-model","InputValue[choice]");labelElement.text("{{choice}}")}repeatElement.append(inputElement);repeatElement.append(labelElement)}else if(scope.ngspColumn.Type==="yesNo"){var inputElement=$("<input />");inputElement.attr("type","checkbox");inputElement.attr("data-ng-model","InputValue");inputElement.attr("data-ng-change","checkboxChanged()");outerElement.append(inputElement)}else{console.log(scope.ngspColumn.Type+"is not supported as a column type for checkboxes.");return}outerElement.append(repeatElement);$compile(outerElement)(scope);return outerElement}function generateRadioElement(ngModel,scope){ngModel.$formatters.push(function(value){scope.InputValue=value});var outerElement=$("<span></span>");if(scope.ngspColumn.Type==="yesNo"){console.log("Radio input is not implemented yet for yesNo.");return}else if(scope.ngspColumn.Type==="choice"){console.log("Radio input is not implemented yet for choice.");return}else if(scope.ngspColumn.Type==="lookup"){console.log("Radio input is not implemented yet for lookup.");return}else if(scope.ngspColumn.Type==="metadata"){console.log("Radio input is not implemented yet for metadata.");return}else{console.log(scope.ngspColumn.Type+"is not supported as a column type for radio input.");return}$compile(outerElement)(scope);return outerElement}function generateDateTimeElement(ngModel,scope){scope.InputValue={};ngModel.$formatters.push(function(value){scope.InputValue.Date=value;scope.InputValue.Time=value});scope.calendarOpened=false;scope.calendarFormat="yyyy-MM-dd";scope.openCalendar=function($event){$event.preventDefault();$event.stopPropagation();scope.calendarOpened=true};scope.dateTimeChanged=function(){var dateTimeValue=new Date;if(scope.InputValue.Date!==undefined){dateTimeValue.setFullYear(scope.InputValue.Date.getFullYear());dateTimeValue.setMonth(scope.InputValue.Date.getMonth());dateTimeValue.setDate(scope.InputValue.Date.getDate())}if(scope.InputValue.Time!==undefined){dateTimeValue.setHours(scope.InputValue.Time.getHours());dateTimeValue.setMinutes(scope.InputValue.Time.getMinutes())}dateTimeValue.setSeconds(0);ngModel.$setViewValue(dateTimeValue)};var outerElement=$("<span></span>");outerElement.attr("class","input-group");var dateElement=$("<span></span>");dateElement.attr("class","input-group");var dateTextInputElement=$("<input />");dateTextInputElement.attr("class","form-control");dateTextInputElement.attr("data-ng-model","InputValue.Date");dateTextInputElement.attr("data-datepicker-popup","{{calendarFormat}}");dateTextInputElement.attr("data-is-open","calendarOpened");dateTextInputElement.attr("data-ng-change","dateTimeChanged()");dateElement.append(dateTextInputElement);var dateButtonContainerElement=$("<span></span>");dateButtonContainerElement.attr("class","input-group-btn");var dateButtonInputElement=$("<button></button>");dateButtonInputElement.attr("class","btn btn-default");dateButtonInputElement.attr("data-ng-click","openCalendar($event)");var dateButtonImageElement=$("<i></i>");dateButtonImageElement.attr("class","glyphicon glyphicon-calendar");dateButtonInputElement.append(dateButtonImageElement);dateButtonContainerElement.append(dateButtonInputElement);dateElement.append(dateButtonContainerElement);outerElement.append(dateElement);var timeElement=$("<timepicker></timepicker>");timeElement.attr("data-ng-model","InputValue.Time");timeElement.attr("data-ng-change","dateTimeChanged()");outerElement.append(timeElement);$compile(outerElement)(scope);return outerElement}function generatePeoplePickerElement(element,ngModel,scope){if(ngModel.$viewValue!==undefined){scope.InputValue=ngModel.$viewValue}else{scope.InputValue=null}var elementId="pp_"+scope.ngspColumn.Title+"_"+scope.ngspColumn.Id;var outerElement=$("<span></span>");outerElement.attr("id",elementId);$compile(outerElement)(scope);var schema={SearchPrincipalSource:15,ResolvePrincipalSource:15,MaximumEntitySuggestions:50,Width:"100%",OnUserResolvedClientScript:onUserResolve};schema.Required=scope.ngspColumn.IsRequired;if(scope.ngspColumn.PeopleOnly){schema.PrincipalAccountType="User,DL"}else{schema.PrincipalAccountType="User,DL,SecGroup,SPGroup"}if(scope.ngspColumn.Type==="person"){schema.AllowMultipleValues=false}else if(scope.ngspColumn.Type==="multiPerson"){schema.AllowMultipleValues=true}else{console.log(scope.ngspColumn.Type+"is not supported as a column type for people pickers.");return}scope.$watch(element[0].childNodes.length,function(){var ppElement=$("#"+elementId);if(ppElement.length>0){SPClientPeoplePicker_InitStandaloneControlWrapper(elementId,scope.InputValue,schema);ngModel.$formatters.push(function(value){SPClientPeoplePicker_InitStandaloneControlWrapper(elementId,value,schema)})}});function onUserResolve(){var peoplePickerDictKey=elementId+"_TopSpan";var peoplePicker=SPClientPeoplePicker.SPClientPeoplePickerDict[peoplePickerDictKey];scope.InputValue=peoplePicker.GetAllUserInfo();ngModel.$setViewValue(scope.InputValue)}return outerElement}}app.directive("ngspList",angularSpList);function angularSpList($compile){return{restrict:"A",scope:{ngspList:"="},link:link};function link(scope,element,attrs){scope.ngspList={};scope.$watch("ngspList",function(){if(scope.ngspList.DisplayName!==undefined&&scope.ngspList.Columns!==undefined){element.html("");element.append(generateTitleElement(scope.ngspList));element.append(generateGridElement());element.append(generateButtonsElement(element,scope))}})}}})(angular,jQuery);var app=app||angular.module("angularSP",["ui.bootstrap"]);(function(ng,$){app.factory("spListFactory",["$rootScope","$q",spListFactory]);function spListFactory($rootScope,$q){var service={initFactory:initFactory,createListItem:createListItem,createListItems:createListItems,getListItem:getListItem,getListItems:getListItems,updateListItem:updateListItem,deleteListItem:deleteListItem,getServerRelativeUrl:getServerRelativeUrl};var serverRelativeUrl;var columnDefinitions;var contentTypeDefinitions;var listDefinitions;var columnsInfo;var cTypesInfo;var listsInfo;return service;function getServerRelativeUrl(){return serverRelativeUrl}function initFactory(columnDefs,cTypeDefs,listDefs){columnDefinitions=columnDefs;columnDefinitions=cTypeDefs;listDefinitions=listDefs;columnsInfo=ng.copy(columnDefs);cTypesInfo=ng.copy(cTypeDefs);listsInfo=ng.copy(listDefs);cascadeColumnProperties(columnsInfo,cTypesInfo,listsInfo);var initDeferred=$q.defer();SP.SOD.executeFunc("sp.js","SP.ClientContext",function(){SP.SOD.executeFunc("sp.taxonomy.js","SP.Taxonomy.TaxonomySession",function(){SP.SOD.executeFunc("SP.UserProfiles.js","SP.UserProfiles.PeopleManager",sharePointReady)})});return initDeferred.promise;function sharePointReady(){var context=SP.ClientContext.get_current();var web=context.get_web();context.load(web,"ServerRelativeUrl");var listFieldData=loadListInfoProperties(listDefs);context.executeQueryAsync(success,failure);function success(){serverRelativeUrl=web.get_serverRelativeUrl();var fieldLookups=setListInfoProperties(listsInfo,listFieldData);context.executeQueryAsync(lookupsSuccess,lookupsFailure);function lookupsSuccess(){fieldLookups.forEach(function(fieldLookup){fieldLookup.Callback(fieldLookup.Column,fieldLookup.RawResults)});$rootScope.listsInfo=listsInfo;initDeferred.resolve(listsInfo)}function lookupsFailure(sender,args){console.log(args.get_message());initDeferred.reject(args.get_message())}}function failure(sender,args){console.log(args.get_message());initDeferred.reject(args.get_message())}}}function createListItem(listName,itemProps){var createDeferred=$q.defer();console.log(listName);var listInfo;if(listsInfo!==undefined){if(listsInfo[listName]!==undefined){listInfo=listsInfo[listName];SP.SOD.executeFunc("sp.js","SP.ClientContext",function(){SP.SOD.executeFunc("sp.taxonomy.js","SP.Taxonomy.TaxonomySession",function(){SP.SOD.executeFunc("SP.UserProfiles.js","SP.UserProfiles.PeopleManager",sharePointReady)})})}}else{}return createDeferred.promise;function sharePointReady(){var listName=listInfo.DisplayName;var context=SP.ClientContext.get_current();var web=context.get_web();var spList=web.get_lists().getByTitle(listName);var itemCreationInfo=new SP.ListItemCreationInformation;var listItem=spList.addItem(itemCreationInfo);var columns=listInfo.Columns;for(var columnName in columns){if(columns.hasOwnProperty(columnName)){var columnInfo=columns[columnName];if(itemProps[columnName]!==undefined){var inputValue=itemProps[columnName];var itemValue=getListItemValue(columnInfo,inputValue);listItem.set_item(columnName,itemValue)}}}listItem.update();context.load(listItem);context.executeQueryAsync(function(){createDeferred.resolve(listItem.get_id())},function(sender,args){createDeferred.reject(args.get_message())})}}function createListItems(listName,itemsProps){var createDeferred=$q.defer();return createDeferred.promise}function getListItem(listName,itemId){var listItemDeferred=$q.defer();var listInfo;var listItemId;if(listsInfo!==undefined){if(listsInfo[listName]!==undefined){listInfo=listsInfo[listName];listItemId=itemId;SP.SOD.executeFunc("sp.js","SP.ClientContext",function(){SP.SOD.executeFunc("sp.taxonomy.js","SP.Taxonomy.TaxonomySession",function(){SP.SOD.executeFunc("SP.UserProfiles.js","SP.UserProfiles.PeopleManager",sharePointReady)})})}}else{}return listItemDeferred.promise;function sharePointReady(){var listName=listInfo.DisplayName;var context=SP.ClientContext.get_current();var web=context.get_web();var spList=web.get_lists().getByTitle(listName);var spItem=spList.getItemById(listItemId);context.load(spItem);context.executeQueryAsync(function(){var columns=listInfo.Columns;var spItemValues=spItem.get_fieldValues();var inputValues={};var peopleLookups=[];for(var columnName in columns){if(columns.hasOwnProperty(columnName)){var columnInfo=columns[columnName];if(spItemValues[columnName]!==undefined){var spItemValue=spItemValues[columnName];if(spItemValue!==null){var inputValue=getInputValue(columnInfo,spItemValue,peopleLookups);inputValues[columnName]=inputValue}}}}if(peopleLookups.length>0){context.executeQueryAsync(function(){peopleLookups.forEach(function(peopleLookup){peopleLookup.Callback(peopleLookup.Values,peopleLookup.RawResults)});listItemDeferred.resolve(inputValues)},function(sender,args){listItemDeferred.reject(args.get_message())})}else{listItemDeferred.resolve(inputValues)}},function(sender,args){listItemDeferred.reject(args.get_message())})}}function getListItems(listName,params){}function updateListItem(listName,itemProps,overrideConflict){}function deleteListItem(listName,itemId){var deleteDeferred=$q.defer();var context=SP.ClientContext.get_current();var web=context.get_web();var list=web.get_lists().getByTitle(libraryName);var item=list.getItemById(itemId);item.deleteObject();context.executeQueryAsync(success,failure);return deleteDeferred.promise;function success(){deleteDeferred.resolve()}function failure(sender,args){deleteDeferred.reject(sender,args)}}function getListItemValue(columnInfo,inputValue){var itemValue=null;switch(columnInfo.Type){case"text":case"choice":case"multiText":case"link":case"number":case"currency":itemValue=inputValue;break;case"multiChoice":itemValue=[];for(var value in inputValue){if(inputValue.hasOwnProperty(value)){if(inputValue[value]){itemValue.push(value)}}}break;case"lookup":itemValue=new SP.FieldLookupValue;itemValue.set_lookupId(inputValue);break;case"multiLookup":itemValue=[];for(var value in inputValue){if(inputValue.hasOwnProperty(value)){if(inputValue[value]){var lookupValue=new SP.FieldLookupValue;lookupValue.set_lookupId(value);itemValue.push(lookupValue)}}}break;case"yesNo":if(inputValue){itemValue=1}else{itemValue=0}break;case"person":if(inputValue.length===1){var person=inputValue[0];itemValue=SP.FieldUserValue.fromUser(person.Key)}else if(inputValue.length!==0){}break;case"multiPerson":itemValue=[];for(var i=0;i<inputValue.length;i++){var person=inputValue[i];itemValue.push(SP.FieldUserValue.fromUser(person.Key))}break;case"metadata":var metadataItem=columnInfo.TermsById[inputValue];itemValue=metadataItem.label+"|"+metadataItem.id;break;case"multiMetadata":var metadataValues=[];for(var value in inputValue){if(inputValue.hasOwnProperty(value)){if(inputValue[value]){var metadataItem=columnInfo.TermsById[value];metadataValues.push("-1");metadataValues.push(metadataItem.label+"|"+metadataItem.id)}}}itemValue=metadataValues.join(";#");break;case"dateTime":itemValue=inputValue.toISOString();break;default:break}return itemValue}function getInputValue(columnInfo,itemValue,peopleLookups){var inputValue;switch(columnInfo.Type){case"text":case"choice":case"multiText":case"link":case"number":case"currency":inputValue=itemValue;break;case"multiChoice":inputValue={};for(var i=0;i<itemValue.length;i++){var value=itemValue[i];inputValue[value]=true}break;case"lookup":inputValue=itemValue.get_lookupId();break;case"multiLookup":inputValue={};for(var i=0;i<itemValue.length;i++){var value=itemValue[i].get_lookupId();inputValue[value]=true}break;case"yesNo":if(itemValue===1){inputValue=true}else{inputValue=false}break;case"person":inputValue=[];var context=SP.ClientContext.get_current();var web=context.get_web();var rawValue=web.getUserById(itemValue.get_lookupId());context.load(rawValue);peopleLookups.push({Values:inputValue,RawResults:rawValue,Callback:setPersonInputValue});break;case"multiPerson":inputValue=[];var context=SP.ClientContext.get_current();var web=context.get_web();var rawValues=[];for(var i=0;i<itemValue.length;i++){var rawValue=web.getUserById(itemValue[i].get_lookupId());context.load(rawValue);rawValues.push(rawValue)}peopleLookups.push({Values:inputValue,RawResults:rawValues,Callback:setPersonInputValue});break;case"metadata":inputValue=itemValue.get_termGuid();break;case"multiMetadata":inputValue={};for(var i=0;i<itemValue.get_count();i++){var value=itemValue.getItemAtIndex(i);inputValue[value.get_termGuid()]=true}break;case"dateTime":inputValue=new Date(itemValue);break;default:break}return inputValue}function setPersonInputValue(values,rawResults){if(rawResults.length>0){rawResults.forEach(addPersonToValues)}else if(rawResults!==null){addPersonToValues(rawResults)}function addPersonToValues(result){var person={AutoFillDisplayText:result.get_title(),AutoFillKey:result.get_loginName(),Description:result.get_email(),DisplayText:result.get_title(),EntityType:"User",IsResolved:true,Key:result.get_loginName(),Resolved:true};values.push(person)}}function cascadeColumnProperties(columnsInfo,cTypesInfo,listsInfo){cascadeListsInfoProperties(columnsInfo,listsInfo)}function cascadeListsInfoProperties(columnsInfo,listsInfo){for(var listName in listsInfo){if(listsInfo.hasOwnProperty(listName)){var listColumns=listsInfo[listName].Columns;if(listColumns!==undefined){cascadeListInfoColumnProperties(columnsInfo,listColumns)}}}}function cascadeListInfoColumnProperties(columnsInfo,listColumns){for(var columnName in listColumns){if(listColumns.hasOwnProperty(columnName)){var column=listColumns[columnName];var columnInfo=columnsInfo[columnName];if(columnInfo!==undefined){cascadeProperties(columnInfo,column)}}}}function cascadeProperties(columnFrom,columnTo){for(var propertyName in columnFrom){if(columnFrom.hasOwnProperty(propertyName)){if(columnTo[propertyName]===undefined){columnTo[propertyName]=columnFrom[propertyName]}}}}function loadSiteColumnProperties(columnDefs){var fieldData=[];var context=SP.ClientContext.get_current();var web=context.get_web();var fields=web.get_fields();for(var columnName in columnDefs){if(columnsInfo.hasOwnProperty(columnName)){var field=fields.getByInternalNameOrTitle(columnName);context.load(field);fieldData.push(field)}}return fieldData}function setSiteColumnProperties(columnsInfo,fieldData){var context=SP.ClientContext.get_current();for(var i=0;i<fieldData.length;i++){var field=fieldData[i];var internalName=field.get_internalName();if(columnsInfo[internalName]!==undefined){var column=columnsInfo[internalName];setColumnInfo(column,field,0)}else{console.log("Field data mismatch.")}}}function setColumnInfo(column,field,fieldLookups,lookupCount){var context=SP.ClientContext.get_current();column.Title=field.get_title();column.Id=field.get_id().toString();column.IsRequired=field.get_required();column.SchemaXml=field.get_schemaXml();column.DefaultValue=field.get_defaultValue();column.Scope=field.get_scope();column.FieldType=field.get_fieldTypeKind();switch(column.Type){case"text":if(column.FieldType===2){if(column.InputType===undefined){column.InputType="text"}}else{console.log(field.get_title()+": column type mismatch.")}break;case"multiText":if(column.FieldType===3){var multiLineTextField=context.castTo(field,SP.FieldMultiLineText);column.IsRichText=multiLineTextField.get_richText();if(column.InputType===undefined){if(column.IsRichText){column.InputType="nicEdit"}else{column.InputType="textBox"}}}else{console.log(field.get_title()+": column type mismatch.")}break;case"choice":if(column.FieldType===6){if(column.InputType===undefined){column.InputType="dropDown"}var choiceField=context.castTo(field,SP.FieldChoice);column.Choices=choiceField.get_choices();column.FillInChoice=choiceField.get_fillInChoice();column.EditFormat=choiceField.get_editFormat()}else{console.log(field.get_title()+": column type mismatch.")}break;case"multiChoice":if(column.FieldType===15){if(column.InputType===undefined){column.InputType="checkbox"}var multiChoiceField=context.castTo(field,SP.FieldMultiChoice);column.Choices=multiChoiceField.get_choices();column.FillInChoice=multiChoiceField.get_fillInChoice()}else{console.log(field.get_title()+": column type mismatch.")}break;case"lookup":if(column.FieldType===7){if(column.InputType===undefined){column.InputType="dropDown"}var lookupField=context.castTo(field,SP.FieldLookup);var multiLookup=lookupField.get_allowMultipleValues();if(!multiLookup){column.LookupField=lookupField.get_lookupField();column.LookupList=lookupField.get_lookupList();var rawlookupItems=loadLookupOptions(column);fieldLookups.push({Column:column,RawResults:rawlookupItems,Callback:setLookupOptions});lookupCount++}else{console.log(field.get_title()+": column type mismatch.")}}else{console.log(field.get_title()+": column type mismatch.")}break;case"multiLookup":if(column.FieldType===7){if(column.InputType===undefined){column.InputType="checkbox"}var lookupField=context.castTo(field,SP.FieldLookup);var multiLookup=lookupField.get_allowMultipleValues();if(multiLookup){column.LookupField=lookupField.get_lookupField();column.LookupList=lookupField.get_lookupList();var rawlookupItems=loadLookupOptions(column);fieldLookups.push({Column:column,RawResults:rawlookupItems,Callback:setLookupOptions});lookupCount++}else{console.log(field.get_title()+": column type mismatch.")}}else{console.log(field.get_title()+": column type mismatch.")}break;case"yesNo":if(column.FieldType===8){if(column.InputType===undefined){column.InputType="checkbox"}}else{console.log(field.get_title()+": column type mismatch.")}break;case"person":if(column.FieldType===20){if(column.InputType===undefined){column.InputType="peoplePicker"}var userField=context.castTo(field,SP.FieldUser);column.SelectionGroup=userField.get_selectionGroup();column.PeopleOnly=userField.get_selectionMode()===0;var multiUsers=userField.get_allowMultipleValues();if(!multiUsers){lookupCount++}else{console.log(field.get_title()+": column type mismatch.")}}else{console.log(field.get_title()+": column type mismatch.")}break;case"multiPerson":if(column.FieldType===20){if(column.InputType===undefined){column.InputType="peoplePicker"}var userField=context.castTo(field,SP.FieldUser);column.SelectionGroup=userField.get_selectionGroup();column.PeopleOnly=userField.get_selectionMode()===0;var multiUsers=userField.get_allowMultipleValues();if(multiUsers){lookupCount++}else{console.log(field.get_title()+": column type mismatch.")}}else{console.log(field.get_title()+": column type mismatch.")}break;case"metadata":if(column.FieldType===0){if(column.InputType===undefined){column.InputType="dropDown"}var schemaFieldType=parseMetadataSchema(column);if(schemaFieldType==="TaxonomyFieldType"){var rawTermSet=loadMetadataTerms(column);fieldLookups.push({Column:column,RawResults:rawTermSet,Callback:setMetadataTerms});lookupCount++}else{console.log(field.get_title()+": column type mismatch.")}}else{console.log(field.get_title()+": column type mismatch.")}break;case"multiMetadata":if(column.FieldType===0){if(column.InputType===undefined){column.InputType="checkbox"}var schemaFieldType=parseMetadataSchema(column);if(schemaFieldType==="TaxonomyFieldTypeMulti"){var rawTermSet=loadMetadataTerms(column);fieldLookups.push({Column:column,RawResults:rawTermSet,Callback:setMetadataTerms});lookupCount++}else{console.log(field.get_title()+": column type mismatch.")}}else{console.log(field.get_title()+": column type mismatch.")}break;case"link":if(column.FieldType===11){if(column.InputType===undefined){column.InputType="text"}}else{console.log(field.get_title()+": column type mismatch.")}break;case"number":if(column.FieldType===9){if(column.InputType===undefined){column.InputType="text"}}else{console.log(field.get_title()+": column type mismatch.")}break;case"currency":if(column.FieldType===10){if(column.InputType===undefined){column.InputType="text"}}else{console.log(field.get_title()+": column type mismatch.")}break;case"dateTime":if(column.FieldType===4){if(column.InputType===undefined){column.InputType="dateTime"}}else{console.log(field.get_title()+": column type mismatch.")}break;default:break}return lookupCount}function loadListInfoProperties(listDefs){var fieldData=[];var context=SP.ClientContext.get_current();var web=context.get_web();for(var listName in listDefs){if(listDefs.hasOwnProperty(listName)){var listDef=listDefs[listName];var listTitle=listName;if(listDef.DisplayName!==undefined){listTitle=listDef.DisplayName}var list=web.get_lists().getByTitle(listTitle);if(listDef.Columns!==undefined){loadListFields(context,list,listDef.Columns,fieldData)}else{}}}return fieldData}function loadListFields(context,list,listColumns,fieldData){var fields=list.get_fields();for(var columnName in listColumns){if(listColumns.hasOwnProperty(columnName)){var field=fields.getByInternalNameOrTitle(columnName);context.load(field);fieldData.push(field)}}}function loadLookupOptions(column){var query=new SP.CamlQuery;var context=SP.ClientContext.get_current();var web=context.get_web();var list=web.get_lists().getById(column.LookupList);var lookupItems=list.getItems(query);context.load(lookupItems);return lookupItems}function loadMetadataTerms(column){var context=SP.ClientContext.get_current();var taxSession=SP.Taxonomy.TaxonomySession.getTaxonomySession(context);var termStores=taxSession.get_termStores();var termStore=termStores.getById(column.SspId);var termSet=termStore.getTermSet(column.TermSetId);var terms=termSet.getAllTerms();context.load(terms);return terms}function setLookupOptions(column,lookupItems){column.LookupItems=[];column.LookupItemsById={};column.LookupItemsByLabel={};var lookupItemsEnum=lookupItems.getEnumerator();while(lookupItemsEnum.moveNext()){var lookupItem=lookupItemsEnum.get_current();var lookupItemValues=lookupItem.get_fieldValues();var lookupItemId=lookupItemValues.ID;var lookupItemLabel=lookupItemValues[column.LookupField];var lookupItemObj={id:lookupItemId,label:lookupItemLabel};column.LookupItems.push(lookupItemObj);column.LookupItemsById[lookupItemId]=lookupItemObj;column.LookupItemsByLabel[lookupItemLabel]=lookupItemObj}}function setMetadataTerms(column,terms){column.Terms=[];column.TermsById={};column.TermsByLabel={};var termEnum=terms.getEnumerator();while(termEnum.moveNext()){var currentTerm=termEnum.get_current();var currentTermId=currentTerm.get_id().toString();var currentTermLabel=currentTerm.get_name();var termObj={id:currentTermId,label:currentTermLabel};column.Terms.push(termObj);column.TermsById[currentTermId]=termObj;column.TermsByLabel[currentTermLabel]=termObj}}function setListInfoProperties(listsInfo,fieldData){var fieldLookups=[];for(var i=0;i<fieldData.length;i++){var field=fieldData[i];var internalName=field.get_internalName();var scope=field.get_scope();var listTitle=scope.split("/").pop();var listInfo=listsInfo[listTitle];if(listInfo!==undefined&&listInfo.Columns!==undefined){var column=listInfo.Columns[internalName];if(listInfo.LookupCount===undefined){listInfo.LookupCount=0}listInfo.LookupCount=setColumnInfo(column,field,fieldLookups,listInfo.LookupCount)}else{}}return fieldLookups}function getListGuid(listName){var deferred=$q.defer();var context=SP.ClientContext.get_current();var web=context.get_web();var list=web.get_lists().getByTitle(listName);context.load(list);context.executeQueryAsync(success,failure);return deferred.promise;function success(){var listGuid=list.get_id();deferred.resolve(listGuid.toString())}function failure(sender,args){deferred.reject(sender,args)}}function getListField(listName,fieldName){var fieldDeferred=$q.defer();var context=SP.ClientContext.get_current();var web=context.get_web();var list=web.get_lists().getByTitle(listName);var fields=list.get_fields();var field=fields.getByInternalNameOrTitle(fieldName);context.load(field);context.executeQueryAsync(onFieldSucceeded,function(sender,args){console.log(fieldName);console.log(args.get_message())});return fieldDeferred.promise;function onFieldSucceeded(){fieldDeferred.resolve(field)}}function parseMetadataSchema(column){var xmlDoc=$.parseXML(column.SchemaXml);var xml=$(xmlDoc);var field=xml.find("Field");var type="";if(field!==undefined){type=field.attr("Type")}var properties=xml.find("Property");for(var i=0;i<properties.length;i++){var propertyName=properties[i].firstChild.textContent===undefined?properties[i].firstChild.text:properties[i].firstChild.textContent;var propertyValue=properties[i].lastChild.textContent===undefined?properties[i].lastChild.text:properties[i].lastChild.textContent;if(propertyName!==propertyValue){switch(propertyName){case"SspId":column.SspId=propertyValue;break;case"GroupId":column.GroupId=propertyValue;break;case"TermSetId":column.TermSetId=propertyValue}}}return type}function setItemValues(columns,listItem,itemProps){for(var columnName in columns){if(columns.hasOwnProperty(columnName)&&itemProps[columnName]!==undefined&&itemProps[columnName].display&&columns[columnName].type!==undefined&&columns[columnName].inputType!=undefined){
var columnType=columns[columnName].type;var inputType=columns[columnName].inputType;var formValue=itemProps[columnName].value;var columnValue;switch(columnType){case"text":columnValue=processText(formValue,inputType);break;case"multiText":columnValue=processMultiText(formValue,inputType);break;case"choice":columnValue=processChoice(formValue,inputType);break;case"multiChoice":columnValue=processMultiText(formValue,inputType);break;case"lookup":columnValue=processLookup(formValue,inputType);break;case"multiLookup":columnValue=processMultiLookup(formValue,inputType);break;case"yesNo":columnValue=processYesNo(formValue,inputType);break;case"person":columnValue=processPerson(formValue,inputType);break;case"multiPerson":columnValue=processMultiPerson(formValue,inputType);break;case"metadata":columnValue=processMetadata(formValue,inputType);break;case"multiMetadata":columnValue=processMultiMetadata(formValue,inputType);break;case"link":columnValue=processLink(formValue,inputType);break;case"number":columnValue=processNumber(formValue,inputType);break;case"currency":columnValue=processCurrency(formValue,inputType);break;case"dateTime":columnValue=processDateTime(formValue,inputType);break;default:columnValue=null;break}listItem.set_item(columnName,columnValue)}}return listItem}return formSubmitPromise;function processText(formValue,inputType){if(formValue!==undefined&&formValue!==""){return formValue}else{return null}}function processMultiText(formValue,inputType){if(formValue!==undefined&&formValue!==""&&formValue!=="<br>"){return formValue}else{return null}}function processChoice(formValue,inputType){if(formValue!==undefined&&formValue!==""){return formValue}else{return null}}function processMetadata(formValue,inputType){if(formValue!==undefined&&formValue!==""){var metadataItem=metadataItems[formValue];return metadataItem.label+"|"+formValue}else{return null}}function processMetadataMulti(formValue,inputType){if(formValue!==undefined){var metadataValues=[];for(var key in formValue){if(fieldValues[key]){metadataValues.push("-1");metadataValues.push(metadataItems[key].label+"|"+key)}}return metadataValues.join(";#")}else{return null}}function processDate(formValue,inputType){if(formValue!==undefined&&formValue!==""){var workingDate=new Date(formValue);return workingDate.toISOString()}else{return null}}function processYesNo(formValue,inputType){if(formValue!==undefined&&formValue!==""){return formValue}else{return null}}function processPeopePicker(formValue,inputType){var userInfoArray=programDetails[field];if(userInfoArray!==undefined&&(visibleElements[field]||visibleElements[field]===undefined)){if(userInfoArray.length>0){var userInfo=userInfoArray[0];var user=SP.FieldUserValue.fromUser(userInfo.Key);return{fieldType:"user",value:user}}}return null}function processPeoplePickerMulti(formValue,inputType){var userInfoArray=programDetails[field];if(userInfoArray!==undefined&&(visibleElements[field]||visibleElements[field]===undefined)){var userArray=[];for(var i=0;i<userInfoArray.length;i++){var userInfo=userInfoArray[i];var user=SP.FieldUserValue.fromUser(userInfo.Key);userArray.push(user)}if(userArray.length>0){return{fieldType:"user",value:userArray}}}return null}}})(angular,jQuery);